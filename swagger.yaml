swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      produces:
       - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/{accountId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Get User Account by ID
      description: Retrieve user account details by account ID
      parameters:
        - name: accountId
          in: path
          description: ID of the user account to retrieve
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User account details retrieved successfully
          schema:
            $ref: '#/definitions/User'
        '404':
          description: User account not found
        '500':
          description: Internal Server Error

  /transactions:
    post:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Create Transaction
      description: Create a new transaction
      parameters:
        - in: body
          name: body
          description: Transaction details
          required: true
          schema:
            $ref: '#/definitions/Transaction'
      produces:
        - application/json
      responses:
        '201':
          description: Transaction created successfully
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /transactions/{accountId}:
    parameters:
      - name: accountId
        in: path
        description: ID of the account to retrieve transactions for
        required: true
        type: string
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Get Transactions by Account ID
      description: Retrieve transactions associated with a user account by account ID
      produces:
        - application/json
      responses:
        '200':
          description: Transactions retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
        '404':
          description: Account not found
        '500':
          description: Internal Server Error

  /transactions/{accountId}/{transactionId}:
    parameters:
      - name: accountId
        in: path
        description: ID of the account associated with the transaction
        required: true
        type: string
      - name: transactionId
        in: path
        description: ID of the transaction
        required: true
        type: string
    put:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Update Transaction Category
      description: Update the category of a transaction
      parameters:
        - name: transactionId
          in: path
          description: ID of the transaction to update
          required: true
          type: string
        - in: body
          name: body
          description: Updated transaction category
          required: true
          schema:
            $ref: '#/definitions/TransactionCategory'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction category updated successfully
          schema:
            $ref: '#/definitions/Transaction'
        '404':
          description: Transaction or Account not found
        '500':
          description: Internal Server Error

    delete:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Delete Transaction
      description: Delete an existing transaction
      parameters:
        - name: transactionId
          in: path
          description: ID of the transaction to delete
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: Transaction deleted successfully
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  Transaction:
    type: object
    properties:
      id:
        type: string
        description: Transaction ID
      accountId:
        type: string
        description: ID of the account associated with the transaction
      amount:
        type: number
        description: Amount of the transaction
      date:
        type: string
        format: date-time
        description: Date and time of the transaction
      description:
        type: string
        description: Description of the transaction
      category:
        type: string
        description: Category of the transaction
  TransactionCategory:
    type: object
    properties:
      category:
        type: string
        description: New category for the transaction
